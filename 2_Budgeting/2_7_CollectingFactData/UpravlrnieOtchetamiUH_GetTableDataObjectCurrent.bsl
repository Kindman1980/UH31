&ИзменениеИКонтроль("ПолучитьТаблицуДанныхОбъектаТек")
Функция ПолучитьТаблицуДанныхОбъектаТек_ОЦО(КонтекстОтчета, СтрЗапрос)

	ПостроительЗапросаВнутр = Новый ПостроительЗапроса;
	ПостроительЗапросаВнутр.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;

	//////////// Настраиваем построитель запроса ////////////////////

	ПостроительЗапросаВнутр.Текст = СтрЗапрос.ТекстЗапроса;		
	ПостроительЗапросаВнутр.ЗаполнитьНастройки();
	ПостроительЗапросаВнутр.ВыбранныеПоля.Очистить();

	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗапрос.ТекстЗапроса;
	ПараметрыЗапроса = Запрос.НайтиПараметры();
	#Вставка
	//доработка чтобы работал отбор по организациям в документах
	//проверяется текст запроса на тип выборки из документов с отбором по датам.
	Если стрнайти(ПостроительЗапросаВнутр.Текст,"ИЗ Документ.") и стрнайти(ПостроительЗапросаВнутр.Текст,"ГДЕ Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон")  
		и КонтекстОтчета.Свойство("Организация") и ЗначениеЗаполнено(КонтекстОтчета.Организация) тогда
		ПостроительЗапросаВнутр.Текст = СтрЗаменить(ПостроительЗапросаВнутр.Текст,"ГДЕ Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон", "ГДЕ Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон и Организация = &Организация");
		СтрЗапрос.ТекстЗапроса = ПостроительЗапросаВнутр.Текст;
	КонецЕсли;	
	#Конецвставки

	// Очистим отбор
	ОтборКоличество = ПостроительЗапросаВнутр.Отбор.Количество();	
	Для Н = 1 По ОтборКоличество Цикл
		ПостроительЗапросаВнутр.Отбор.Удалить(ОтборКоличество - Н);
	КонецЦикла;

	// Формируем список показателей для отбора и список необходимых аналитик

	ПравилаИспользованияПолей = СтрЗапрос.ТаблицаОперандов[0].ПравилаИспользованияПолейЗапроса;
	СписокПутей=Новый Массив;

	Для Каждого СтрокаПравило ИЗ ПравилаИспользованияПолей Цикл

		Если ЗначениеЗаполнено(СтрокаПравило.Поле) И (НЕ ОбщегоНазначенияУХ.ПринудительноеЗаполнениеПоля(СтрокаПравило)) Тогда

			ПутьВыбранногоПоля = СтрокаПравило.Поле;

			Пока СписокПутей.Найти(ПутьВыбранногоПоля) <> Неопределено Цикл

				ПутьВыбранногоПоля="Ссылка."+ПутьВыбранногоПоля;

			КонецЦикла;

			Поле = ПостроительЗапросаВнутр.ВыбранныеПоля.Добавить(ПутьВыбранногоПоля, СтрокаПравило.КодАналитики);
			СписокПутей.Добавить(ПутьВыбранногоПоля);

		КонецЕсли;

	КонецЦикла;

	Если СтрЗапрос.СпособПолучения = Перечисления.СпособыПолученияОперандов.ВнутренниеДанныеРегистрБухгалтерии Тогда

		СтруктураЗапроса=СтрЗапрос.СтруктураЗапроса;

		Если СтрНайти(СтрЗапрос.ТекстЗапроса,"ДвиженияССубконто") > 0 Тогда

			ПостроительЗапросаВнутр.Параметры.Вставить("СчетДт",СтруктураЗапроса.СписокСчетов);

			Если СтруктураЗапроса.Свойство("СписокКоррСчетов") Тогда

				ПостроительЗапросаВнутр.Параметры.Вставить("СчетКт",СтруктураЗапроса.СписокКоррСчетов);

			КонецЕсли;

			ПостроительЗапросаВнутр.ВыбранныеПоля.Добавить("СчетДт.Код","Счет");
			ПостроительЗапросаВнутр.ВыбранныеПоля.Добавить("СчетКт.Код","КоррСчет");

			Если СтрНайти(СтрЗапрос.ТекстЗапроса,"Период")>0
				И ПостроительЗапросаВнутр.ВыбранныеПоля.Найти("Период") = Неопределено Тогда

				ПостроительЗапросаВнутр.ВыбранныеПоля.Добавить("Период","Период");

			КонецЕсли;

			Если СтрНайти(СтрЗапрос.ТекстЗапроса,"Регистратор")>0
				И ПостроительЗапросаВнутр.ВыбранныеПоля.Найти("Регистратор") = Неопределено Тогда

				ПостроительЗапросаВнутр.ВыбранныеПоля.Добавить("Регистратор","Регистратор");

			КонецЕсли;

		Иначе

			ЕстьОбороты = СтрНайти(СтрЗапрос.ТекстЗапроса,"&СчетДт")>0;
			СтруктураЗапроса=СтрЗапрос.СтруктураЗапроса;

			Если СтруктураЗапроса.Свойство("СписокСчетов") И СтруктураЗапроса.СписокСчетов.Количество()>0 Тогда

				Если ЕстьОбороты Тогда

					ПостроительЗапросаВнутр.ВыбранныеПоля.Добавить("СчетДт","Счет");
					ПостроительЗапросаВнутр.ВыбранныеПоля.Добавить("СчетКт","КоррСчет");

					ПостроительЗапросаВнутр.Параметры.Вставить("СчетДт",СтруктураЗапроса.СписокСчетов);
					ПостроительЗапросаВнутр.Параметры.Вставить("СчетКт",СтруктураЗапроса.СписокКоррСчетов);

				Иначе

					ПостроительЗапросаВнутр.ВыбранныеПоля.Добавить("Счет","Счет");
					ПостроительЗапросаВнутр.Параметры.Вставить("Счет",СтруктураЗапроса.СписокСчетов);

				КонецЕсли;

			Иначе

				Если ЕстьОбороты Тогда

					ПостроительЗапросаВнутр.Параметры.Вставить("СчетДт",СтрЗапрос.ТаблицаОперандов[0].Счет);
					ПостроительЗапросаВнутр.Параметры.Вставить("СчетКт",СтрЗапрос.ТаблицаОперандов[0].КоррСчет);

				Иначе

					ПостроительЗапросаВнутр.Параметры.Вставить("Счет",СтрЗапрос.ТаблицаОперандов[0].Счет);

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	ТекПравилаВычисленияПараметров=СтрЗапрос.ПравилаВычисленияПараметров.Скопировать();
	ТекПравилаВычисленияПараметров.Колонки.Добавить("ИзКонтекста",ОбщегоНазначенияУХ.ПолучитьОписаниеТиповБулево());
	ТекПравилаВычисленияПараметров.Колонки.Добавить("ЗначениеИзКонтекста");

	Для Каждого Параметр ИЗ ТекПравилаВычисленияПараметров Цикл

		Если НЕ ИспользуетсяПриОтборе(Параметр.СпособВычисленияПараметра) Тогда

			Продолжить;

		КонецЕсли;

		СвойстваОтбора=ПолучитьСвойстваПараметра(КонтекстОтчета,Параметр);

		Если ПараметрыЗапроса.Найти(Параметр.ИмяПараметра)=Неопределено Тогда

			ОтборПараметр=ПостроительЗапросаВнутр.Отбор.Добавить(Параметр.ИмяПараметра);
			ОтборПараметр.Использование=Истина;		
			ОтборПараметр.ВидСравнения=СвойстваОтбора.ВидСравнения;
			ОтборПараметр.Значение=СвойстваОтбора.Значение;

		Иначе

			ПостроительЗапросаВнутр.Параметры.Вставить(Параметр.ИмяПараметра,Параметр.ЗначениеИзКонтекста);

		КонецЕсли;

	КонецЦикла;
	#Вставка
	//доработка чтобы работал отбор по организациям в документах
	//проверяется текст запроса на тип выборки из документов с отбором по датам.
	Если стрнайти(ПостроительЗапросаВнутр.Текст,"ИЗ Документ.") и стрнайти(ПостроительЗапросаВнутр.Текст,"ГДЕ Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон")
		и КонтекстОтчета.Свойство("Организация") и ЗначениеЗаполнено(КонтекстОтчета.Организация) тогда
		ПостроительЗапросаВнутр.Параметры.Вставить("Организация",КонтекстОтчета.Организация);
	КонецЕсли;
	#КонецВставки

	ПостроительЗапросаВнутр.Выполнить();

	ТабРезультат=ПостроительЗапросаВнутр.Результат.Выгрузить();

	ЗаполнитьАналитикиПринудительно(ТабРезультат,ПравилаИспользованияПолей,КонтекстОтчета);

	Возврат ТабРезультат;

КонецФункции
